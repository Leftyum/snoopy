local uis = game:GetService("UserInputService")
local player = game.Players.LocalPlayer
local running = false
local cps = 12

if not uis.TouchEnabled then return end

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MobileClickerGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Draggable container
local container = Instance.new("Frame")
container.Size = UDim2.new(0, 170, 0, 160)
container.Position = UDim2.new(0, 20, 0, 20)
container.BackgroundTransparency = 1
container.Active = true
container.Draggable = true
container.Parent = screenGui

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 150, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 0)
toggleButton.Text = "Auto Clicker OFF"
toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 20
toggleButton.Parent = container

-- CPS Label
local cpsLabel = Instance.new("TextLabel")
cpsLabel.Size = UDim2.new(0, 150, 0, 30)
cpsLabel.Position = UDim2.new(0, 10, 0, 60)
cpsLabel.BackgroundTransparency = 1
cpsLabel.TextColor3 = Color3.new(1, 1, 1)
cpsLabel.Font = Enum.Font.SourceSans
cpsLabel.TextSize = 18
cpsLabel.Text = "CPS: " .. cps
cpsLabel.Parent = container

-- Slider Background
local sliderBackground = Instance.new("Frame")
sliderBackground.Size = UDim2.new(0, 150, 0, 20)
sliderBackground.Position = UDim2.new(0, 10, 0, 95)
sliderBackground.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderBackground.Parent = container

-- Slider Button
local sliderButton = Instance.new("TextButton")
sliderButton.Size = UDim2.new(0, 20, 1, 0)
sliderButton.Position = UDim2.new(0, (cps / 30) * 130, 0, 0)
sliderButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
sliderButton.Text = ""
sliderButton.AutoButtonColor = false
sliderButton.Parent = sliderBackground

-- Slider Logic
local dragging = false
local maxCPS = 30
local minCPS = 1

sliderButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
    end
end)

sliderButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

uis.TouchMoved:Connect(function(input)
    if dragging then
        local absPos = sliderBackground.AbsolutePosition.X
        local absSize = sliderBackground.AbsoluteSize.X
        local touchX = input.Position.X
        local relativeX = math.clamp(touchX - absPos, 0, absSize - sliderButton.AbsoluteSize.X)
        sliderButton.Position = UDim2.new(0, relativeX, 0, 0)

        local ratio = relativeX / (absSize - sliderButton.AbsoluteSize.X)
        cps = math.clamp(math.floor(minCPS + (maxCPS - minCPS) * ratio + 0.5), minCPS, maxCPS)
        cpsLabel.Text = "CPS: " .. cps
    end
end)

-- Auto Click Loop
local function autoClick()
    local vim = game:GetService("VirtualInputManager")
    while running do
        local pos = uis:GetMouseLocation()
        vim:SendTouchTap(Vector2.new(pos.X, pos.Y), Enum.UserInputState.Begin, false)
        task.wait(1 / cps)
    end
end

-- Toggle Button Click
toggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        running = not running
        toggleButton.Text = running and "Auto Clicker ON" or "Auto Clicker OFF"
        toggleButton.BackgroundColor3 = running and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        
        if running then
            task.spawn(autoClick)
        end
    end
end)
